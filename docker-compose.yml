version: '3.9'

services:
  matrimony_postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_VOLUME_NAME}:/var/lib/postgresql/data 
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_DB: ${POSTGRES_DB} 
      JWT_SECRET: ${JWT_SECRET}
    env_file: .env 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
    networks:
      - matrimony_network  

  matrimony_liquibase:
    build:
      context: .
      dockerfile: Dockerfile.liquibase
    container_name: ${LIQUIBASE_CONTAINER_NAME} 
    depends_on:
      matrimony_postgres:
        condition: service_healthy
    volumes:
      - ./liquibase:/liquibase
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_DB: ${POSTGRES_DB} 
      LIQUIBASE_HOME: ${LIQUIBASE_HOME} 
      JWT_SECRET: ${JWT_SECRET}
    env_file: .env  
    networks:
      - matrimony_network  

networks:
  matrimony_network:  
    external: true  

volumes:
  matrimony_postgres_data:
    name: ${POSTGRES_VOLUME_NAME}  
